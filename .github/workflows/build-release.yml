name: Build and (Optionally) Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      os:
        description: 'Operating Systems to build (comma separated, e.g. macos-latest,ubuntu-latest,windows-latest)'
        required: false
        default: 'macos-latest,ubuntu-latest,windows-latest'

jobs:
  build:
    # Use a matrix; if using manual trigger you can process the input
    # (For brevity, this example simply uses all OS if triggered by a branch push)
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [x64, arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Verify tag matches version
        id: verify_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_VERSION=${GITHUB_REF#refs/tags/v}
            PACKAGE_VERSION=$(node -p "require('./package.json').version")
            if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
              echo "Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
              exit 1
            fi
          fi
        shell: bash

      - name: Build app
        run: npm run build

      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y snapd
          sudo snap install snapcraft --classic

      - name: Package app
        run: npm run electron:build:${{ matrix.arch }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          draft: true  # or false, depending on your needs
          files: |
            dist_electron/*.dmg
            dist_electron/*.deb
            dist_electron/*.exe
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
